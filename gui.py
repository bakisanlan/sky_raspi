# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sarsilmaz.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
import time

from PyQt5.QtWebEngineWidgets import QWebEngineView
from PyQt5.QtWidgets import QVBoxLayout

from PyQt5.QtCore import QUrl

from dronekit import Command, connect, VehicleMode, LocationGlobalRelative
from pymavlink import mavutil

import math
import cv2
import sys
import random


#DRONE BAÄžLANTISI
#
connection_string= ('127.0.0.1:14550')
# mavproxy.py --master=/dev/ttyUSB0 --baudrate 115200 --out 127.0.0.1:14550 --out 127.0.0.1:14551
# connection_string='/dev/ttyUSB0'
# connection_string = '/dev/serial/by-id/usb-ArduPilot_Pixhawk4_250033001051393130343139-if00'

global iha
iha=connect(connection_string,wait_ready=True,timeout=100)
#iha=connect(connection_string,wait_ready=False,timeout=100,baud=57600)



class Ui_MainWindow(QMainWindow,object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1345, 1037)
        MainWindow.setStyleSheet("background-color: rgb(85, 87, 83);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.frame_mode = QtWidgets.QFrame(self.centralwidget)
        self.frame_mode.setGeometry(QtCore.QRect(560, 500, 451, 261))
        font = QtGui.QFont()
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.frame_mode.setFont(font)
        self.frame_mode.setAutoFillBackground(False)
        self.frame_mode.setStyleSheet("background-color: rgb(186, 189, 182);")
        self.frame_mode.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_mode.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_mode.setObjectName("frame_mode")
        self.button_mode_auto = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_auto.setGeometry(QtCore.QRect(10, 80, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.webview = QWebEngineView(self.centralwidget)
        self.button_mode_auto.setFont(font)
        self.button_mode_auto.setObjectName("button_mode_auto")
        self.button_mode_land = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_land.setGeometry(QtCore.QRect(120, 40, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_land.setFont(font)
        self.button_mode_land.setObjectName("button_mode_land")
        self.button_mode_guided = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_guided.setGeometry(QtCore.QRect(120, 80, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_guided.setFont(font)
        self.button_mode_guided.setObjectName("button_mode_guided")
        self.button_mode_rtl = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_rtl.setGeometry(QtCore.QRect(10, 40, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_rtl.setFont(font)
        self.button_mode_rtl.setObjectName("button_mode_rtl")
        self.labell_mode = QtWidgets.QLabel(self.frame_mode)
        self.labell_mode.setGeometry(QtCore.QRect(210, 10, 51, 20))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.labell_mode.setFont(font)
        self.labell_mode.setObjectName("labell_mode")
        self.frame_command = QtWidgets.QFrame(self.centralwidget)
        self.frame_command.setGeometry(QtCore.QRect(1140, 500, 111, 261))
        font = QtGui.QFont()
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.frame_command.setFont(font)
        self.frame_command.setAutoFillBackground(False)
        self.frame_command.setStyleSheet("background-color: rgb(186, 189, 182);")
        self.frame_command.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_command.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_command.setObjectName("frame_command")
        self.button_disarm = QtWidgets.QPushButton(self.frame_command)
        self.button_disarm.setGeometry(QtCore.QRect(10, 80, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        # Add a label to display flight time
        self.label_flight_time = QtWidgets.QLabel(MainWindow)
        self.label_flight_time.setGeometry(QtCore.QRect(560, 780, 200, 30))
        self.label_flight_time.setText("Flight Time: 00:00:00")

        # Create a QTimer instance
        self.flight_timer = QTimer(MainWindow)

        # Connect the timeout signal to a function (e.g., update_flight_time)
        self.flight_timer.timeout.connect(self.update_flight_time)

        # Set the interval for the timer in milliseconds (1000 milliseconds = 1 second)
        self.flight_timer.start(1000)

        self.button_disarm.setFont(font)
        self.button_disarm.setObjectName("button_disarm")
        self.button_arm = QtWidgets.QPushButton(self.frame_command)
        self.button_arm.setGeometry(QtCore.QRect(10, 40, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_arm.setFont(font)
        self.button_arm.setObjectName("button_arm")
        self.label_command = QtWidgets.QLabel(self.frame_command)
        self.label_command.setGeometry(QtCore.QRect(10, 10, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.label_command.setFont(font)
        self.label_command.setObjectName("label_command")
        self.button_takeoff = QtWidgets.QPushButton(self.frame_command)
        self.button_takeoff.setGeometry(QtCore.QRect(10, 120, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_takeoff.setFont(font)
        self.button_takeoff.setObjectName("button_takeoff")
        self.frame_parameter_info = QtWidgets.QFrame(self.centralwidget)
        self.frame_parameter_info.setGeometry(QtCore.QRect(100, 500, 451, 491))
        font = QtGui.QFont()
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.frame_parameter_info.setFont(font)
        self.frame_parameter_info.setAutoFillBackground(False)
        self.frame_parameter_info.setStyleSheet("background-color: rgb(186, 189, 182);")
        self.frame_parameter_info.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_parameter_info.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_parameter_info.setObjectName("frame_parameter_info")
        self.label_home_location = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_home_location.setGeometry(QtCore.QRect(10, 280, 131, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_home_location.setFont(font)
        self.label_home_location.setObjectName("label_home_location")
        self.label_arm = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_arm.setGeometry(QtCore.QRect(320, 160, 81, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_arm.setFont(font)
        self.label_arm.setObjectName("label_arm")
        self.label_mode = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_mode.setGeometry(QtCore.QRect(320, 60, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_mode.setFont(font)
        self.label_mode.setObjectName("label_mode")
        self.line_armable = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_armable.setGeometry(QtCore.QRect(320, 130, 111, 21))
        self.line_armable.setReadOnly(True)
        self.line_armable.setObjectName("line_armable")
        self.line_arm = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_arm.setGeometry(QtCore.QRect(320, 180, 113, 21))
        self.line_arm.setReadOnly(True)
        self.line_arm.setObjectName("line_arm")
        self.label_armable = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_armable.setGeometry(QtCore.QRect(320, 110, 81, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_armable.setFont(font)
        self.label_armable.setObjectName("label_armable")
        self.label_altitude = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_altitude.setGeometry(QtCore.QRect(320, 210, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_altitude.setFont(font)
        self.label_altitude.setObjectName("label_altitude")
        self.line_mode = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_mode.setGeometry(QtCore.QRect(320, 80, 113, 21))
        self.line_mode.setReadOnly(True)
        self.line_mode.setObjectName("line_mode")
        self.line_velocity = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_velocity.setGeometry(QtCore.QRect(320, 280, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_velocity.setFont(font)
        self.line_velocity.setReadOnly(True)
        self.line_velocity.setObjectName("line_velocity")
        self.label_velocity = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_velocity.setGeometry(QtCore.QRect(320, 260, 81, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_velocity.setFont(font)
        self.label_velocity.setObjectName("label_velocity")
        self.line_altitude = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_altitude.setGeometry(QtCore.QRect(320, 230, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_altitude.setFont(font)
        self.line_altitude.setReadOnly(True)
        self.line_altitude.setObjectName("line_altitude")
        self.label_airspeed = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_airspeed.setGeometry(QtCore.QRect(320, 310, 81, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_airspeed.setFont(font)
        self.label_airspeed.setObjectName("label_airspeed")
        self.line_airspeed = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_airspeed.setGeometry(QtCore.QRect(320, 330, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_airspeed.setFont(font)
        self.line_airspeed.setReadOnly(True)
        self.line_airspeed.setObjectName("line_airspeed")
        self.label_groundspeed = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_groundspeed.setGeometry(QtCore.QRect(320, 360, 121, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_groundspeed.setFont(font)
        self.label_groundspeed.setObjectName("label_groundspeed")
        self.line_groundspeed = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_groundspeed.setGeometry(QtCore.QRect(320, 380, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_groundspeed.setFont(font)
        self.line_groundspeed.setReadOnly(True)
        self.line_groundspeed.setObjectName("line_groundspeed")
        self.label_gps = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_gps.setGeometry(QtCore.QRect(10, 390, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_gps.setFont(font)
        self.label_gps.setObjectName("label_gps")
        self.label_parameter_info = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_parameter_info.setGeometry(QtCore.QRect(10, 20, 321, 21))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_parameter_info.setFont(font)
        self.label_parameter_info.setObjectName("label_parameter_info")
        self.label_battery = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_battery.setGeometry(QtCore.QRect(10, 60, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_battery.setFont(font)
        self.label_battery.setObjectName("label_battery")
        self.label_global_location = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_global_location.setGeometry(QtCore.QRect(10, 170, 141, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_global_location.setFont(font)
        self.label_global_location.setObjectName("label_global_location")
        self.plainText_battery = QtWidgets.QPlainTextEdit(self.frame_parameter_info)
        self.plainText_battery.setGeometry(QtCore.QRect(10, 80, 231, 71))
        self.plainText_battery.setReadOnly(True)
        self.plainText_battery.setObjectName("plainText_battery")
        self.plainText_global_location = QtWidgets.QPlainTextEdit(self.frame_parameter_info)
        self.plainText_global_location.setGeometry(QtCore.QRect(10, 190, 231, 71))
        self.plainText_global_location.setReadOnly(True)
        self.plainText_global_location.setObjectName("plainText_global_location")
        self.plainText_home_location = QtWidgets.QPlainTextEdit(self.frame_parameter_info)
        self.plainText_home_location.setGeometry(QtCore.QRect(10, 300, 231, 71))
        self.plainText_home_location.setReadOnly(True)
        self.plainText_home_location.setObjectName("plainText_home_location")
        self.plainText_gps = QtWidgets.QPlainTextEdit(self.frame_parameter_info)
        self.plainText_gps.setGeometry(QtCore.QRect(10, 410, 231, 71))
        self.plainText_gps.setReadOnly(True)
        self.plainText_gps.setObjectName("plainText_gps")
        self.label_heading = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_heading.setGeometry(QtCore.QRect(320, 410, 121, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_heading.setFont(font)
        self.label_heading.setObjectName("label_heading")
        self.line_heading = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_heading.setGeometry(QtCore.QRect(320, 430, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_heading.setFont(font)
        self.line_heading.setReadOnly(True)
        self.line_heading.setObjectName("line_heading")

        self.label_camera = QtWidgets.QLabel(self.centralwidget)
        self.label_camera.setGeometry(QtCore.QRect(20, 10, 640, 480))
        self.label_camera.setAutoFillBackground(False)
        self.label_camera.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.label_camera.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_camera.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_camera.setText("")
        self.label_camera.setObjectName("label_camera")

        # Create QWebEngineView for the MAVProxy map
        self.mavproxy_map_view = QWebEngineView(self.centralwidget)
        self.mavproxy_map_view.setGeometry(660, 10, 640, 480)

        # You need to access the layout of your central widget, assuming it's a QVBoxLayout
        central_layout = QVBoxLayout(self.centralwidget)
        central_layout.addWidget(self.mavproxy_map_view, alignment=Qt.AlignTop)

        # Load the MAVProxy map's web interface
        # Adjust the URL to match your MAVProxy setup
        self.mavproxy_map_view.setUrl(QUrl("http://127.0.0.1:14550/map"))


        self.frame_mode.raise_()
        self.frame_command.raise_()

        self.frame_parameter_info.raise_()
        self.label_camera.raise_()

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1345, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

         # Move the label_flight_time below the label_gps
        self.label_flight_time.setGeometry(QtCore.QRect(560, 780, 200, 30))

        # Add QLabel widgets for roll, pitch, and yaw
        self.label_roll = QLabel(self.centralwidget)
        self.label_roll.setGeometry(QtCore.QRect(560, 820, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_roll.setFont(font)
        self.label_roll.setObjectName("label_roll")

        self.line_roll = QtWidgets.QLineEdit(self.centralwidget)
        self.line_roll.setGeometry(QtCore.QRect(640, 820, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_roll.setFont(font)
        self.line_roll.setReadOnly(True)
        self.line_roll.setObjectName("line_roll")

        self.label_pitch = QLabel(self.centralwidget)
        self.label_pitch.setGeometry(QtCore.QRect(760, 820, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_pitch.setFont(font)
        self.label_pitch.setObjectName("label_pitch")

        self.line_pitch = QtWidgets.QLineEdit(self.centralwidget)
        self.line_pitch.setGeometry(QtCore.QRect(840, 820, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_pitch.setFont(font)
        self.line_pitch.setReadOnly(True)
        self.line_pitch.setObjectName("line_pitch")

        self.label_yaw = QLabel(self.centralwidget)
        self.label_yaw.setGeometry(QtCore.QRect(960, 820, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_yaw.setFont(font)
        self.label_yaw.setObjectName("label_yaw")

        self.line_yaw = QtWidgets.QLineEdit(self.centralwidget)
        self.line_yaw.setGeometry(QtCore.QRect(1040, 820, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_yaw.setFont(font)
        self.line_yaw.setReadOnly(True)
        self.line_yaw.setObjectName("line_yaw")

        #****************************Kamera Input*******************************

        self.camera_label = QLabel(self.label_camera)         #BURASI KALIYOR TAMAMEN !!
        self.camera_label.resize(640, 480)
        self.capture = cv2.VideoCapture(0)
        self.timer = self.startTimer(30) # 30ms = 30fps

        #************************************************************************

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    

    def update_flight_time(self):
        # This function will be called every second
        # You can update the flight time label or perform any other actions here
        if hasattr(self, 'start_time'):
            current_time = QDateTime.currentDateTime()
            elapsed_time = self.start_time.secsTo(current_time)
            flight_time = QDateTime.fromTime_t(elapsed_time).toUTC().toString("hh:mm:ss")
            self.label_flight_time.setText(f"Flight Time: {flight_time}")



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.button_mode_auto.setText(_translate("MainWindow", "AUTO"))
        self.button_mode_land.setText(_translate("MainWindow", "LAND"))
        self.button_mode_guided.setText(_translate("MainWindow", "GUIDED"))
        self.button_mode_rtl.setText(_translate("MainWindow", "RTL"))
        self.labell_mode.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline; color:#ef2929;\">MODE</span></p></body></html>"))
        self.button_disarm.setText(_translate("MainWindow", "DISARM"))
        self.button_arm.setText(_translate("MainWindow", "ARM"))
        self.label_command.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline; color:#ef2929;\">COMMAND</span></p></body></html>"))
        self.button_takeoff.setText(_translate("MainWindow", "TAKEOFF"))
        self.label_home_location.setText(_translate("MainWindow", "HOME LOCATION"))
        self.label_arm.setText(_translate("MainWindow", "ARM"))
        self.label_mode.setText(_translate("MainWindow", "MODE"))
        self.label_armable.setText(_translate("MainWindow", "ARMABLE"))
        self.label_altitude.setText(_translate("MainWindow", "ALTITUDE"))
        self.label_velocity.setText(_translate("MainWindow", "VELOCITY"))
        self.label_airspeed.setText(_translate("MainWindow", "AIR SPEED"))
        self.label_groundspeed.setText(_translate("MainWindow", "GROUND SPEED"))
        self.label_gps.setText(_translate("MainWindow", "GPS"))
        self.label_parameter_info.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline; color:#ef2929;\">PARAMETER &amp; SYSTEM INFORMATION</span></p><p><span style=\" text-decoration: underline;\"><br/></span></p></body></html>"))
        self.label_battery.setText(_translate("MainWindow", "BATTERY"))
        self.label_global_location.setText(_translate("MainWindow", "GLOBAL LOCATION"))
        self.label_heading.setText(_translate("MainWindow", "HEADING"))

        #PUSH BUTONA FONKSÄ°YON ATANMASI

        
        #**********************************************************************
        
        self.button_mode_land.clicked.connect(self.mod_degistir_land)
        self.button_mode_guided.clicked.connect(self.mod_degistir_guided)
        self.button_mode_rtl.clicked.connect(self.mod_degistir_rtl)
        self.button_mode_auto.clicked.connect(self.mod_degistir_auto)

        #self.button_mode_poshold_2.clicked.connect(self.mod_degistir_poshold)
        #self.button_mode_loiter_2.clicked.connect(self.mod_degistir_loiter)
        #self.button_mode_althold_2.clicked.connect(self.mod_degistir_althold)
        
        #**********************************************************************
        
        #**********************************************************************
        self.button_arm.clicked.connect(self.arm)
        self.button_disarm.clicked.connect(self.disarm)
        #**********************************************************************
        self.button_takeoff.clicked.connect(self.takeoff)
        






    #******************************************Mod Changed*********************************************


    def mod_degistir_land(self):
        iha.mode = VehicleMode("LAND")
    
    
    def mod_degistir_rtl(self):
        iha.mode = VehicleMode("RTL")
    
    
    def mod_degistir_guided(self):
        iha.mode = VehicleMode("GUIDED")

    def mod_degistir_auto(self):
        iha.mode = VehicleMode("AUTO")
    


   
    

    
    #**********************************************************************************************************



    def direction_forward(self):
        
#        msg = iha.message_factory.set_position_target_local_ned_encode(
#          0,
#          0, 0,
#          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
#          0b0000011111000111,
#          0, 0, 0, 
#          2, 0, 0,
#          0, 0, 0,
#          0, math.radians(0))
#        
#        iha.send_mavlink(msg)
         
         msg = iha.message_factory.set_position_target_local_ned_encode(
          0,
          0, 0,
          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
          0b0000011111111000,
          4, 0, 0, #pozisyonlar(metre)
          0, 0, 0,#hizlar(metre/s)
          0, 0, 0,#akselarasyon(fonksiyonsuz)
          0, math.radians(0))#yaw,yaw_rate(rad,rad/s)
    

         iha.send_mavlink(msg)

        #******************************Disarm**************************************
    def arm(self):
        iha.armed = True


    #***********************************Arm*****************************************

    def disarm(self):
        iha.armed = False
    

    #************************************Takeoff**************************************

    def takeoff(self):
        iha.simple_takeoff(5)
        self.start_time = QDateTime.currentDateTime()
        
        if   iha.mode != "GUIDED":
            msgBox = QtWidgets.QMessageBox()
            msgBox.setWindowTitle("WARNING")
            msgBox.setText("The TAKEOFF command cannot run without GUIDED mode.");
            msgBox.setInformativeText("Set the drone's mode to GUIDED")
            ret = msgBox.exec()
        elif iha.armed == False :
            msgBox = QtWidgets.QMessageBox()
            msgBox.setWindowTitle("WARNING")
            msgBox.setText("The TAKEOFF command cannot run without ARM.");
            msgBox.setInformativeText("Set the drone to ARM")
            ret = msgBox.exec()
        elif (iha.mode == "GUIDED" and iha.armed == True) :
             iha.simple_takeoff(5)
            







    #********************************************Kamera Input************************************************

    def timerEvent(self, event):
        # Kameradan bir kare yakala
        ret, camera_label = self.capture.read()

        # Kareyi PyQt5 QPixmap nesnesine dÃ¶nÃ¼ÅŸtÃ¼r
        if ret:
            img = cv2.cvtColor(camera_label, cv2.COLOR_BGR2RGB)
            h, w, ch = img.shape
            flip = cv2.flip(img,1)
            qimg = QPixmap.fromImage(QImage(flip.data, w, h, ch*w, QImage.Format_RGB888))

            # QPixmap nesnesini QFrame iÃ§inde gÃ¶ster
            self.camera_label.setPixmap(qimg)




    #***********************************KÄ±rmÄ±zÄ± Nokta Rotasyon*****************************


    def rotation(self):
        self.x = random.randint(0,640)
        self.y = random.randint(0,480)
        self.rect.setX(self.x)
        self.rect.setY(self.y)
        ui.line_mode.setText(str(self.x))
        ui.line_armable.setText(str(self.y))
        
        
        
    #*************************************KÄ±rmÄ±zÄ± Nokta OluÅŸturma*******************************

    def createEllipse(self):
        self.pen = QPen(Qt.black)
        self.brush = QColor(255, 0, 0)
        self.rect = self.scene.addEllipse(0, 0, 10, 10, self.pen, self.brush)
        #self.rect1 = self.scene.addRect(0, 0, 30, 30, self.pen, self.brush)
        self.rect.setX(0)
        self.rect.setY(0)






if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()

    def update_line():
        ui.line_altitude.setText(str(iha.location.global_relative_frame.alt))
        ui.line_mode.setText(str(iha.mode.name))
        ui.plainText_battery.setPlainText(str(iha.battery))
        ui.plainText_battery.setPlainText("Voltage:  {}\nCurrent:  {}\nLevel:  {}".format(iha.battery.voltage, iha.battery.current, iha.battery.level))
        ui.line_armable.setText(str(iha.is_armable))
        ui.line_velocity.setText(str(iha.velocity))
        ui.line_arm.setText(str(iha.armed))
        ui.plainText_global_location.setPlainText("Latitude:  {}\nLongitude:  {}".format(iha.location.global_relative_frame.lat, iha.location.global_relative_frame.lon))
        ui.plainText_home_location.setPlainText(str(iha.home_location))
        ui.plainText_gps.setPlainText(str(iha.gps_0))
        ui.line_airspeed.setText(str(round(iha.airspeed,4)))
        ui.line_groundspeed.setText(str(round(iha.groundspeed,4)))
        ui.line_roll.setText(str(iha.attitude.roll))
        ui.line_pitch.setText(str(iha.attitude.pitch))
        ui.line_yaw.setText(str(iha.attitude.yaw))
        
        
    timer = QtCore.QTimer()
    timer.timeout.connect(update_line)
    timer.start(500)
    sys.exit(app.exec_())